@{
    // change these variable strings to choose other locations and file types.
    var myTargetFolder = ViewData["ViewName"];

    var myTargetPath = "images/";
    var myFilter = "*.png";

    // Read  the folder's filenames including path into the files[] array.
    string myTarget = string.Format("{0}/{1}", myTargetPath, myTargetFolder);
    string myDirectory = string.Format("wwwroot/{0}", myTarget);

    var files = await Task.Run(() =>
    Directory.GetFiles(System.IO.Path.Combine(Directory.GetCurrentDirectory(), myDirectory), myFilter)
        .Select(file => $"~/" + myTarget + $"/{System.IO.Path.GetFileName(file)}")
        .ToList()
        );

    // Page Tile
    ViewData["Title"] = myTargetFolder;
}

<!-- Menu for other selections -->
<div class="pb-2" id="Flowers" style="display: initial;">
    <a asp-controller="home" asp-action="Flowers">Flowers</a>
</div>
<div class="pb-2" id="Seashore" style="display: initial;">
    <a asp-controller="home" asp-action="Seashore">Seashore</a>
</div>
<div class="pb-2" id="Christmas" style="display: initial;">
    <a asp-controller="home" asp-action="Christmas">Christmas</a>
</div>
<div class="pb-2" id="Religious" style="display: initial;">
    <a asp-controller="home" asp-action="Religious">Religious</a>
</div>
<div class="pb-2" id="Misc" style="display: initial;">
    <a asp-controller="home" asp-action="Misc">Misc</a>
</div>

<!-- View Heading -->
<h1>@myTargetFolder Images</h1>

<!-- images Section -->
<div id="image-container">

    <!-- Loop through the files array and display the contents -->
    @foreach (var file in @files)
    {
        <!-- image-wrapper -->
        <div class="image-wrapper">

            <!-- opens image in new screen -->
            <a href="@Url.Content(file)" target="_blank">

                <!-- Image to display-->
                <img data-src="@Url.Content(file)" alt="" />
            </a>
        </div>
    }
</div>

<script defer>       
    document.addEventListener("DOMContentLoaded", function () {
        var images = document.querySelectorAll("img[data-src]");
        var imageContainer = document.getElementById("image-container");

        var observer = new IntersectionObserver(
            function (entries, observer) {
                entries.forEach(function (entry) {
                    if (entry.isIntersecting) {
                        var img = entry.target;
                        img.src = img.getAttribute("data-src");
                        observer.unobserve(img);
                    }
                });
            }
        );

        images.forEach(function (img) {
            observer.observe(img);
        });

        var checkLoadingCompletion = function () {
            if (Array.from(images).every(img => img.complete)) {
                imageContainer.style.display = "flex";
            } else {
                setTimeout(checkLoadingCompletion, 100);
            }
        };

        checkLoadingCompletion();
    });
</Script>

<script>
    document.getElementById("@myTargetFolder").style.display = "none";
</script>
